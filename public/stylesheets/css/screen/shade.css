.framed,
.framed .f_r,
.framed .f_b,
.framed .f_l,
.framed .f_c
{
float:left;
position:relative; z-index:1;
width:auto; height:auto;
margin:0; padding:0;
}
.framed .f_tt,
.framed .f_rr,
.framed .f_bb,
.framed .f_ll
{
display:block;
}
.framed
{
margin:0;
}
.framed .f_r
{
left:6px;
background:url(images/shade-r.png) no-repeat right top;
_background:none;
}
.framed .f_b
{
top:7px;
background:url(images/shade-b.png) no-repeat right bottom;
_background:none;
}
.framed .f_c
{
float:none;
position:relative;
left:0; top:-7px;
padding:1px 0; margin:0;
border:5px solid #FFFFFF;
}
.framed .f_l
{
left:-6px;
padding-left: 2px;
background:url(images/shade-l.png) no-repeat left bottom;
_background:none;
}
*html .framed .f_r,
*html .framed .f_b,
*html .framed .f_l
{ height: 0; }

*html .framed .f_tt,
*html .framed .f_rr,
*html .framed .f_bb,
*html .framed .f_bb *,
*html .framed .f_ll,
*html .framed .f_ll *
{
display: block;
position: absolute;
left: 0; top: 0;
}
*html .framed .f_rr
{
filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/shade-r.png',sizingMethod='crop');
}
*html .framed .f_tt,
*html .framed .f_bb
{
width: expression( parentNode.offsetWidth ); height:16px;
}
*html .framed .f_bb {bottom:-9px !important;}
*html .framed .f_rr,
*html .framed .f_ll
{
width: 6px; height: expression( parentNode.offsetHeight );
}
*html .framed .f_bb,
*html .framed .f_ll
{
overflow: hidden;
}
*html .framed .f_bb *
{
width: 1000px; height: 6px;
filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/shade-b.png',sizingMethod='crop');
}
*html .framed .f_ll *
{
width: 6px; height: 700px;
filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/shade-l.png',sizingMethod='crop');
}
*html .framed .f_rr,
*html .framed .f_bb *
{ right: expression( this.parentNode.offsetWidth % 2 ? -1 : 0 ); left: auto; }
*html .framed .f_ll,
*html .framed .f_ll *,
*html .framed .f_bb,
*html .framed .f_bb *
{ bottom: expression( this.parentNode.offsetHeight % 2 ? -1 : 0 ); top: auto; }
